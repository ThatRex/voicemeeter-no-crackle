@echo off

set NAME=Voicemeeter No Crackle V1.2
set TASK_NAME=voicemeeter-no-crackle
set WORK_DIR=%ProgramData%\voicemeeter-no-crackle
set SCRIPT_NAME=audiodg-fix.ps1
set SCRIPT_PATH=%WORK_DIR%\%SCRIPT_NAME%
set ARGUMENTS=-ExecutionPolicy Bypass -File %SCRIPT_PATH%

title %NAME%

@rem checks if self running with admin privileges; relaunches self with admin privileges if not
net session >nul 2>&1 || (
    powershell -Command "Start-Process cmd -Verb RunAs -ArgumentList '/c ""%~dpnx0""'"
    exit
)

:menu

cls

echo %NAME%
echo https://github.com/ThatRex/voicemeeter-no-crackle
echo.
echo Choose an option:
echo 1. Add Fix
echo 2. Remove Fix
echo 3. Exit
choice /c 123 /n

cls

if errorlevel 3 (

    exit

) else if errorlevel 2 (

    schtasks /end /tn %TASK_NAME%
    schtasks /delete /tn %TASK_NAME% /f
    rd /s /q %WORK_DIR%

) else if errorlevel 1 (

    if not exist %WORK_DIR% mkdir %WORK_DIR%
    if exist %SCRIPT_PATH% del %SCRIPT_PATH%

    (
        echo # File Generated By %NAME%
        echo # https://github.com/ThatRex/voicemeeter-no-crackle
        echo while ($true^) {
        echo     $Process = Get-Process -Name audiodg -ErrorAction SilentlyContinue
        echo     if ($Process^) {
        echo         $Process.ProcessorAffinity = 1
        echo         $Process.PriorityClass = [System.Diagnostics.ProcessPriorityClass]::High
        echo     }
        echo     Start-Sleep -Seconds 5
        echo }
    ) >> %SCRIPT_PATH%

    schtasks /create /tn %TASK_NAME% /sc onlogon /tr "powershell %ARGUMENTS%" /ru system /rl highest /f
    schtasks /run /tn %TASK_NAME%

)

pause

goto :menu
